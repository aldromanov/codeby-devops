name: Diplom Django App CI/CD

on:
  push:
    branches: [diplom_project]
  pull_request:
    branches: [diplom_project]

env:
  WORK_DIR: ./diplom_project/project
  APP_DIR: ./diplom_project/project/src
  DOCKER_DIR: ./diplom_project/project/docker_compose
  DH_REGISTRY: ${{ vars.GH_USER }}
  GH_REGISTRY: ghcr.io/${{ vars.GH_USER }}
  
jobs:
  Build_VM:
    if: "contains(github.event.head_commit.message, '[vm]')"
    runs-on: self-hosted
    steps:
    - uses: actions/checkout@v4
    - name: Login ghcr.io
      run: echo ${{ secrets.GH_RAT }} | docker login -u ${{ vars.GH_USER }} --password-stdin ghcr.io
    - name: Run logging
      working-directory: ${{ env.DOCKER_DIR }} 
      run: docker-compose -f logging.yaml up -d
    - name: Run monitoring
      working-directory: ${{ env.DOCKER_DIR }} 
      run: docker-compose -f monitoring.yaml up -d
    - name: Run django
      working-directory: ${{ env.DOCKER_DIR }} 
      run: |
        docker-compose -f django.yaml up -d
        docker ps

  Django_App_test:
    if: "contains(github.event.head_commit.message, '[app]')"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.9
      uses: actions/setup-python@v5
      with:
        python-version: "3.9"
    - name: Install Dependencies
      working-directory: ${{ env.WORK_DIR }}
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Run Tests
      working-directory: ${{ env.APP_DIR }}
      run: pytest
    - working-directory: ${{ env.WORK_DIR }}
      run: |
        mkdir staging
        zip -r src src
        cp src.zip staging
    - name: Upload artifact App
      uses: actions/upload-artifact@v4
      with:
        name: mynotes
        path: ${{ env.WORK_DIR }}/staging
                  
  Django_App_build:
    runs-on: ubuntu-latest
    needs: [Django_App_test]
    steps:
      - uses: actions/checkout@v4
      - name: Login ghcr.io
        run: echo ${{ secrets.GH_RAT }} | docker login -u ${{ vars.GH_USER }} --password-stdin ghcr.io
      - name: Build and push image by GHCR
        working-directory: ${{ env.WORK_DIR }}
        run: |
          docker build . --no-cache -t ${{ env.GH_REGISTRY }}/${{ vars.DOCKER_NAME }}:latest -t ${{ env.GH_REGISTRY }}/${{ vars.DOCKER_NAME }}:${GITHUB_SHA::6}
          docker push ${{ env.GH_REGISTRY }}/${{ vars.DOCKER_NAME }} --all-tags

  Django_App_update_project:
    runs-on: self-hosted
    needs: [Django_App_build]
    steps:
    - uses: actions/checkout@v4
    - name: Login ghcr.io
      run: echo ${{ secrets.GH_RAT }} | docker login -u ${{ vars.GH_USER }} --password-stdin ghcr.io
    - name: Run project
      working-directory: ${{ env.DOCKER_DIR }}
      run: |
        docker ps
        docker stop django
        docker rm django
        docker pull ${{ env.GH_REGISTRY }}/${{ vars.DOCKER_NAME }}:latest
        docker-compose -f django.yaml up -d
        docker ps
        
